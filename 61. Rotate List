/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==nullptr||k==0) return head;
        int tot_node=0;
        ListNode* temp=head;
        while(temp){
            tot_node++;
            temp=temp->next;
        }
        if(tot_node==1||tot_node==k) return head;
        k=k%tot_node;
        int from_first=tot_node-k;
        temp=head;
        int ct=0;
        while(temp){
            ct++;
            if(ct==from_first) break;
            temp=temp->next;
        }
        ListNode * t=temp;
        while(temp->next){
            temp=temp->next;
        }
        temp->next=head;
        //cout<<temp->val;
        head=t->next;
        t->next=NULL;
        return head;
    }
};
