/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode *ans=nullptr;
        ListNode *temp=nullptr;
        ListNode *temp1=list1;
        ListNode *temp2=list2;
        while(temp1!=NULL&&temp2!=NULL){
            int val;
            if(temp1->val<temp2->val){
                val=temp1->val;
                temp1=temp1->next;
            }
            else{
                val=temp2->val;
                temp2=temp2->next;
            }
            ListNode *newNode=new ListNode(val);
            if(!ans){
                ans=newNode;
                temp=ans;
            }
            else{
                temp->next=newNode;
                temp=temp->next;
            }
        }
        while(temp1!=NULL){
            int val=temp1->val;
            ListNode *newNode=new ListNode(val);
            if(!ans){
                ans=newNode;
                temp=ans;
            }
            else{
                temp->next=newNode;
                temp=temp->next;
            }
            temp1=temp1->next;
        }
        while(temp2!=NULL){
            int val=temp2->val;
            ListNode *newNode=new ListNode(val);
            if(!ans){
                ans=newNode;
                temp=ans;
            }
            else{
                temp->next=newNode;
                temp=temp->next;
            }
            temp2=temp2->next;
        }
        return ans;
    }
};
