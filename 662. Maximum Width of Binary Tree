/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        long long int maxx=1;
        queue<pair<TreeNode*,long long int>>q;
        q.push({root,0});
        while(!q.empty()){
            int sizee=q.size();
            long long int mx,mn;
            long long int min_diff=q.front().second;
            for(int i=0;i<sizee;i++){
                auto temp=q.front();
                q.pop();
                
                long long int index=temp.second-min_diff;
                if(i==0) mn=index;
                if(i==sizee-1) mx=index;
                if(temp.first->left!=NULL) {  
                    q.push({temp.first->left,(2*index)+1});
                }
                if(temp.first->right!=NULL) { 
                    q.push({temp.first->right,(2*index)+2});
                }

            }
            maxx=max(maxx,mx-mn+1);
        }
        return (int)maxx;
    }
};
