/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double>ans;
        if(root==NULL) return ans;
        queue<TreeNode *>q;
        q.push(root);
        while(!q.empty()){
            int size=q.size();
            vector<double>level;
            for(int i=0;i<size;i++){
                level.push_back(q.front()->val);
                
                TreeNode* pp=q.front();
                q.pop();
                if(pp->left!=NULL) q.push(pp->left);
                if(pp->right!=NULL) q.push(pp->right);
            }
            double sum=0;
            for(int i=0;i<level.size();i++){
                sum+=level[i];
            }
            sum*=1.0;
            sum/=level.size();
            ans.push_back(sum);

        }
        return ans;
    }
};
