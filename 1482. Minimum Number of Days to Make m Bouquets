class Solution {
public:
    bool possible(vector<int>& bloomDay, int m, int k,int mid){
        int tot_bouquet=0,tot_adj=0;
        for(int i=0;i<bloomDay.size();i++){
            if(bloomDay[i]<=mid){
                tot_adj++;
                if(tot_adj==k) {
                    tot_bouquet++;
                    tot_adj=0;
                }
            }
            else tot_adj=0;
            if(tot_bouquet==m) break;
        }
        return tot_bouquet==m;
    }
    int minDays(vector<int>& bloomDay, int m, int k) {
        int n=bloomDay.size();
        long long tot_flower_need=1LL*m*k;
        if(tot_flower_need>n) return -1;
        int mx=0;
        for(int i=0;i<n;i++) mx=max(mx,bloomDay[i]);
        int left=1,right=mx;
        while(left<right){
            int mid=(left+right)/2;
            if(possible(bloomDay,m,k,mid)) right=mid;
            else left=mid+1;
        }
        return left;
    }
};
