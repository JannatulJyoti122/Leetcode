class Solution {
public:
    vector<int> decrypt(vector<int>& code, int k) {
        int n=code.size();
        vector<int>ans(n,0);
        if(k==0) return ans;
        int pre_sum[n+1];
        int sum=0;
        pre_sum[0]=0;
        for(int i=0;i<n;i++){
            sum+=code[i];
            pre_sum[i+1]=sum;
        }
        if(k>0){
            int left=1,right=k;
            for(int i=0;i<n;i++){
                if(right>=n) right=0;
                if(left>=n) left=0;
                if(right>=left){
                    ans[i]=pre_sum[right+1]-pre_sum[left];
                }
                else{
                    ans[i]=pre_sum[n]-pre_sum[left]+pre_sum[right+1];
                }
                left++;
                right++;
            }
            return ans;
        }
        int left=n+k;
        int right=n-1;
        for(int i=0;i<n;i++){
            if(left>=n) left=0;
            if(right>=n) right=0;
            if(right>=left){
                    ans[i]=pre_sum[right+1]-pre_sum[left];
            }
            else{
                    ans[i]=pre_sum[n]-pre_sum[left]+pre_sum[right+1];
            }
            left++;
            right++;
        }
        return ans;
        
    }
};
