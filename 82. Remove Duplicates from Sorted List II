/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head==nullptr) return head;
        ListNode* temp=head;
        ListNode* prev=head;
        while(temp){
            if(temp->val==prev->val){
                temp=temp->next;
            }
            else{
                if(prev->next!=temp){
                    prev->val=temp->val;
                    prev->next=temp->next;
                    temp=prev;
                }
                else prev=temp;
            }
        }
        if(prev->next!=NULL){
            if(prev==head){
                ListNode* curr=head;
                while(curr){
                    ListNode* n=curr->next;
                    delete curr;
                    curr=n;
                }
                head=curr;
                return curr;
            }
            else{
                temp=head;
                while(temp){
                    if(temp->next==prev){

                        temp->next=NULL;
                        break;
                    }
                    temp=temp->next;
                }
            }
        }
        return head;
    }
};
