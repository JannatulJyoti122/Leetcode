#include<bits/stdc++.h>
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void find(TreeNode* root,vector<int>&ans){
        if(root==NULL) return;
        ans.push_back(root->val);
        find(root->left,ans);
        find(root->right,ans);
    }
    int getMinimumDifference(TreeNode* root) {
        vector<int>ans;
        find(root,ans);
        int mn=1e9;
        for(int i=0;i<ans.size();i++){
            for(int j=i+1;j<ans.size();j++){
                mn=min(mn,abs(ans[i]-ans[j]));
            }
        }
        return mn;
    }
};
