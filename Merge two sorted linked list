/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode * dummy=new ListNode(-1);
        if(list1==nullptr&&list2==nullptr) return dummy->next;
        else if(list1==nullptr||list2==nullptr) {
            if(list1==nullptr) return list2;
            else return list1;
        }
        ListNode *t1=list1,* t2=list2;
        ListNode *dt=dummy;
        while(t1 && t2){
            if(t1->val<t2->val){
                dt->next=t1;
                dt=t1;
                t1=t1->next;
            }
            else{
                dt->next=t2;
                dt=t2;
                t2=t2->next;
            }
        }
        if(t1!=NULL) dt->next=t1;
        else if(t2!=NULL) dt->next=t2;
        return dummy->next;
    }
};
